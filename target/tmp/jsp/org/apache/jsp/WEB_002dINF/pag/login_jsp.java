/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.3.22.v20171030
 * Generated at: 2018-01-05 11:16:42 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.pag;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"utf-8\">\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("    <title>Amaze UI Admin index Examples</title>\r\n");
      out.write("    <meta name=\"description\" content=\"这是一个 index 页面\">\r\n");
      out.write("    <meta name=\"keywords\" content=\"index\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("    <meta name=\"renderer\" content=\"webkit\">\r\n");
      out.write("    <meta http-equiv=\"Cache-Control\" content=\"no-siteapp\" />\r\n");
      out.write("    <link rel=\"icon\" type=\"image/png\" href=\"/i/favicon.png\">\r\n");
      out.write("    <meta name=\"apple-mobile-web-app-title\" content=\"Amaze UI\" />\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"/css/amazeui.min.css\" />\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"/css/amazeui.datatables.min.css\" />\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"/css/app.css\">\r\n");
      out.write("    <script src=\"/js/jquery.js\"></script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<body data-type=\"login\" class=\"theme-white\">\r\n");
      out.write("    <script src=\"/js/theme.js\"></script>\r\n");
      out.write("    <div class=\"am-g tpl-g\">\r\n");
      out.write("        <!-- 风格切换 -->\r\n");
      out.write("     \r\n");
      out.write("        <div class=\"tpl-login\">\r\n");
      out.write("            <div class=\"tpl-login-content\">\r\n");
      out.write("                <div class=\"tpl-login-logo\">\r\n");
      out.write("\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("                <form class=\"am-form tpl-form-line-form\">\r\n");
      out.write("                    <div class=\"am-form-group\">\r\n");
      out.write("                        <input type=\"text\" class=\"tpl-form-input\" id=\"username\" placeholder=\"请输入账号\">\r\n");
      out.write("\r\n");
      out.write("                    </div>\r\n");
      out.write("\r\n");
      out.write("                    <div class=\"am-form-group\">\r\n");
      out.write("                        <input type=\"password\" class=\"tpl-form-input\" id=\"password\" placeholder=\"请输入密码\">\r\n");
      out.write("\r\n");
      out.write("                    </div>\r\n");
      out.write("                    \r\n");
      out.write("                      <div class=\"am-form-group\">\r\n");
      out.write("                        <input type=\"text\" class=\"tpl-form-input\" id=\"code\" placeholder=\"请输入验证码\">\r\n");
      out.write("\r\n");
      out.write("                    </div>\r\n");
      out.write("                  \r\n");
      out.write("                  \t<img alt=\"验证码\" id=\"scode\" src=\"/picture.do\"  onclick=\"javascript:flushCode();\">看不清?</a>\r\n");
      out.write("\r\n");
      out.write("                    <div class=\"am-form-group\">\r\n");
      out.write("\r\n");
      out.write("                        <button type=\"button\" class=\"am-btn am-btn-primary  am-btn-block tpl-btn-bg-color-success  tpl-login-btn\" onclick=\"login();\">登录</button>\r\n");
      out.write("\r\n");
      out.write("                    </div>\r\n");
      out.write("                    \r\n");
      out.write("                    <a href=\"/user/toRegister.do\">注册</a>\r\n");
      out.write("                </form>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    \r\n");
      out.write("    <div class=\"am-modal am-modal-alert\" tabindex=\"-1\" id=\"my-alert\">\r\n");
      out.write("\t\t  <div class=\"am-modal-dialog\">\r\n");
      out.write("\t\t    <div class=\"am-modal-hd\"></div>\r\n");
      out.write("\t\t    <div class=\"am-modal-bd\" id=\"successAlet\">\r\n");
      out.write("\t\t      \t登录成功\r\n");
      out.write("\t\t    </div>\r\n");
      out.write("\t\t    <div class=\"am-modal-footer\">\r\n");
      out.write("\t\t      <span class=\"am-modal-btn\">确定</span>\r\n");
      out.write("\t\t    </div>\r\n");
      out.write("\t\t  </div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("        \r\n");
      out.write("        <div class=\"am-modal am-modal-no-btn\" tabindex=\"-1\" id=\"your-modal\">\r\n");
      out.write("\t\t  <div class=\"am-modal-dialog\">\r\n");
      out.write("\t\t    <div class=\"am-modal-hd\">\r\n");
      out.write("\t\t      <a href=\"javascript: void(0)\" class=\"am-close am-close-spin\" data-am-modal-close>&times;</a>\r\n");
      out.write("\t\t    </div>\r\n");
      out.write("\t\t    <div class=\"am-modal-bd\" id=\"errorAlert\">\r\n");
      out.write("\t\t      \t登录失败\r\n");
      out.write("\t\t    </div>\r\n");
      out.write("\t\t  </div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("  <script src=\"/js/jquery.js\"></script>\r\n");
      out.write("\t<script src=\"/js/theme.js\"></script>\r\n");
      out.write("\t<script src=\"/js/amazeui.min.js\"></script>\r\n");
      out.write("\t<script src=\"/js/amazeui.datatables.min.js\"></script>\r\n");
      out.write("\t<script src=\"/js/dataTables.responsive.min.js\"></script>\r\n");
      out.write("\t<script src=\"/js/app.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\r\n");
      out.write("\tfunction flushCode() {\r\n");
      out.write("\t    // 每次刷新的时候获取当前时间，防止浏览器缓存刷新失败\r\n");
      out.write("\t    var time = new Date();\r\n");
      out.write("\t    $('#scode').attr('src','/picture.do?'+new Date().getTime());\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("    function login(){\r\n");
      out.write("    \tvar param={\r\n");
      out.write("\t\t\tusername:$('#username').val(),\r\n");
      out.write("\t\t\tpassword:$('#password').val(),\r\n");
      out.write("\t\t\tcode:$('#code').val()\r\n");
      out.write("\t\t};\r\n");
      out.write("\t\t\t$.post('/user/login.do',param,callback);\r\n");
      out.write("\t}\r\n");
      out.write("    \r\n");
      out.write("\tfunction callback(data,status){\r\n");
      out.write("\t\tvar ajaxDAO=data;\r\n");
      out.write("\t\tif(ajaxDAO.success){\r\n");
      out.write("\t\t\t$('#my-alert').on('close.modal.amui', function() {\r\n");
      out.write("\t\t\twindow.location.href='/user/toUsercenter.do';\r\n");
      out.write("\t\t\t})/* 事件监听 */\r\n");
      out.write("\t\t\t$('#my-alert').modal('toggle');\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\telse{\r\n");
      out.write("\t\t\t$('#errorAlert').html(ajaxDAO.message);\r\n");
      out.write("    \t\t$('#your-modal').modal('toggle');\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
